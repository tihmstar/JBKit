//
//  JBExploit_c.hpp
//  JBKit
//
//  Created by tihmstar on 08.01.24.
//

#ifndef JBExploit_c_h
#define JBExploit_c_h

#include <JBKit/JBOffsets_c.h>

#ifdef __cplusplus
extern "C" {
#endif //__cplusplus

typedef void* JBExploit_ctx_t;

#pragma mark get exploit

/*
    Return:
        returns a null terminated list of char *
        caller needs to pass it to JBExploit_freeRegisteredExploitsList to free resources
 */
char **JBExploit_getRegisteredExploitsList();
void JBExploit_freeRegisteredExploitsList(char **list);

JBExploit_ctx_t JBExploit_getExploitWithName(const char *name);

#pragma mark use exploit

int JBExploit_exploit_initExploit(JBExploit_ctx_t ctx, JBOffset_ctx_t offsets, readfunc_t func_read, writefunc_t func_write, execfunc_t func_exec);
int JBExploit_exploit_cleanupExploit(JBExploit_ctx_t ctx);
int JBExploit_exploit_runExploit(JBExploit_ctx_t ctx);

const char * JBExploit_exploit_exploitName(JBExploit_ctx_t ctx);

BOOLEAN JBExploit_exploit_hasRead64(JBExploit_ctx_t ctx);
BOOLEAN JBExploit_exploit_hasRead32(JBExploit_ctx_t ctx);
BOOLEAN JBExploit_exploit_hasWrite64(JBExploit_ctx_t ctx);
BOOLEAN JBExploit_exploit_hasWrite32(JBExploit_ctx_t ctx);
BOOLEAN JBExploit_exploit_hasExecute(JBExploit_ctx_t ctx);

size_t JBExploit_exploit_unstable_read_generic(JBExploit_ctx_t ctx, kptr_t kaddr, void *dstbuf, size_t size, BOOLEAN honorSizeLimit);
size_t JBExploit_exploit_unstable_write_generic(JBExploit_ctx_t ctx, kptr_t kaddr, const void *srcbuf, size_t size, BOOLEAN honorSizeLimit);

uint64_t JBExploit_exploit_unstable_read64(JBExploit_ctx_t ctx, kptr_t kaddr);
uint32_t JBExploit_exploit_unstable_read32(JBExploit_ctx_t ctx, kptr_t kaddr);

int JBExploit_exploit_unstable_write64(JBExploit_ctx_t ctx, kptr_t kaddr, uint64_t val);
int JBExploit_exploit_unstable_write32(JBExploit_ctx_t ctx, kptr_t kaddr, uint32_t val);

kptr_t JBExploit_exploit_unstable_execute(JBExploit_ctx_t ctx, kptr_t kaddr, callargs_t args);

#ifdef __cplusplus
};
#endif //__cplusplus
#endif /* JBExploit_c_h */
